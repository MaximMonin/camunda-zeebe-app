<h4><%= t(".camunda_header") %></h4> 
<a href="" onclick="onViewProcess()"><%= t(".view_camunda_process") %></a>
<div class="container social-box" style="margin-top: 10px; padding: 5px">
  <div class="col-md-12">
    <div class="row">
      <label class="col-sm-3 text-sm-right" style="margin-top: 8px" ><%= t(".domain_name") %>:</label>
      <input type="input" id="domain_name" style="margin-right: 10px" required="required" aria-required="true" type="text" 
            class="form-control integer required col-sm-3" onkeypress="handleSearch(event)"></input>
      <button type="button" id="" class="btn btn-primary" onclick="onSearch();"><%= t(".search") %></button>
    </div>
    <domain-zone></domain-zone>
    <domain-list></domain-list>
  </div>
</div>
<% content_for :js do %>
<script>
  // Callback from camunda through web socket
  // Redirect data to Vue.js frontend components
  function apiData (data) {
    console.log ("ws answer: " + data);
    obj = JSON.parse (data);
    if (obj.activityId && obj.activityId == 'default-zone-list') {
      Event.emit ('defaultzones', obj.data);
    }  
    if (obj.activityId && obj.activityId == 'full-zone-list') {
      Event.emit ('fullzones', obj.data);
    }  
    if (obj.activityId && obj.activityId == 'get-domains-data') {
      Event.emit ('domainslist', obj.data);
    }  
    if (obj.activityId && obj.activityId == 'get-domains-data-full') {
      Event.emit ('domainsdata', obj.data);
    }  
    if (obj.activityId && obj.activityId == 'get-whois-data') {
      alert (obj.data);
    }  
    if (obj.activityId && obj.activityId == 'domain-register-notify') {
      alert (obj.data.info);
    }  
    if (obj.activityId && obj.activityId == 'domain-stop-session') {
      alert (obj.data.info);
    }  
  };

  // Start new camunda process on page load
  var data = Camunda.startProcess ("search-domain", {}, apiData);

  // Publish messages with data to camunda bpm
  function onSearch () {
    event.preventDefault(); 
    var searchname = document.getElementById('domain_name').value;
    if (searchname == "") {
      return;
    }
    document.getElementById('defaultzones-tab').click();
    var zonelist = ['.ua', '.com.ua', '.kiev.ua'];
    Camunda.publishMessage ('search-domain-clicked', {
      searchname: {value: searchname}, 
      zonelist: {value: JSON.stringify(zonelist)}
    }, 
    apiData);
  };
  function handleSearch (e) {
    if(e.keyCode === 13){
      e.preventDefault(); 
      onSearch();
    }
  };

  // Events from Vue.js frontend
  Event.listen('whois-clicked', (data) => {
     var domain = data;
     Camunda.publishMessage ('whois-domain-clicked', {
        whoisdomain: {value: domain}
     }, 
     apiData);
  });
  Event.listen('register-clicked', (data) => {
     var domains = JSON.stringify(data);
     Camunda.publishMessage ('register-domain-clicked', {
        domainlist: {value: domains}
     }, 
     apiData);
  });
 
   // Open camunda Cockpit to view current process execution
  function onViewProcess () {
    url = '/camunda/app/cockpit/default/#/process-instance/' + Camunda.processId;
    window.open(url,'_blank');
  };
</script>
<% end %>
