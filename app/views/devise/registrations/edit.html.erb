<h2><%= t(".header") %></h2>

<%= simple_form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put, class: "card", style: "padding: 20px" }) do |f| %>
  <%= f.error_notification %>

  <div class="form-inputs">
    <div class="form-group">
      <label class="col-sm-3"></label>
      <img id="avatar" class="centered-and-cropped" width="100" height="100" style="border-radius:50%" src="<%= resource.avatar %>"> 
      <button type="button" class="btn btn-link" onclick="event.preventDefault(); document.getElementById('user_photo').click()"><%= t(".change_avatar") %></button>
    </div>
    <%= f.input :email, required: true, autofocus: true, :wrapper => :horizontal_form, label_html: {class: "text-sm-right"}  %>
    <% if devise_mapping.confirmable? && resource.pending_reconfirmation? %>
      <p><%= t(".currently_waiting_confirmation_for_email", email: resource.unconfirmed_email) %></p>
    <% end %>

    <%= f.input :username, required: true, :wrapper => :horizontal_form, label_html: {class: "text-sm-right"} %>
    <%= f.input :phone, hint: (t(".phone_confirmed") if resource.phone_verified_at),
         :wrapper => :horizontal_form, label_html: {class: "text-sm-right"} %>
    <% if resource.phone_verified_at %>
    <% else %>
        <div class="form-group row" id="confirmblock">  
          <label class="col-sm-3"></label>
          <button type="button" id="checkphone" class="btn btn-link" onclick="event.preventDefault(); 
                                                   document.getElementById('confirmblock').style.display = 'none';
                                                   document.getElementById('smsblock').style.display = 'flex';
                                                   axios.post('/users/checkphone',
                                                   { 'phone': document.getElementById('user_phone').value })
                                                   .then(response => {});
                                                    "><%= t(".confirm_phone") %></button>
        </div>
        <div class="form-group" id="smsblock" style='display: none; padding-right: 15px; padding-left: 15px;'>
          <label class="col-sm-3 text-sm-right" style="padding-right: 30px; padding-top=15px; margin-top: 8px"><%= t(".enter_code") %></label>
          <input type="input" id="otp" required="required" aria-required="true" type="text" class="form-control integer required col-sm-3"></input>
          <button type="button" id="verifyphone" class="btn btn-link col-sm-2" onclick="event.preventDefault(); 
                                                   axios.post('/users/verifyphone',
                                                   { 'otp': document.getElementById('otp').value })
                                                   .then(response => {
                                                     if (response.data.status == 'wrong code') {
                                                        document.getElementById('otperror').style.display = 'block';
                                                     }
                                                     else {
                                                       document.getElementById('smsblock').style.display = 'none';
                                                     }
                                                   });
                                                    "><%= t(".send_code") %></button>

          <div id="otperror" class="invalid-feedback" style="display: none; padding-left: 15px; margin-top: 0.65rem"><%= t(".sms_code_is_not_valid") %></div>
      </div>
    <% end %>

    <%= f.input :password,
                hint: t(".leave_blank_if_you_don_t_want_to_change_it"),
                required: false,
                input_html: { autocomplete: "new-password" }, :wrapper => :horizontal_form, label_html: {class: "text-sm-right"} %>
    <%= f.input :password_confirmation,
                required: false,
                input_html: { autocomplete: "new-password" }, :wrapper => :horizontal_form, label_html: {class: "text-sm-right"} %>
    <% if resource.has_local_password %>
      <%= f.input :current_password,
                hint: t(".we_need_your_current_password_to_confirm_your_changes"),
                required: true,
                input_html: { autocomplete: "current-password" }, :wrapper => :horizontal_form, label_html: {class: "text-sm-right"} %>
    <% end %>
    <%= f.file_field :photo, direct_upload: true, style: "display: none" %>  
  </div>

  <div class="form-actions">
    <label class="col-sm-3"></label>
    <%= f.button :submit, t(".update"), class: 'btn btn-primary' %>
  </div>
<% end %>

<% if @socials.count > 0 %>
  <div id="linknew" class="container social-box">
       <label class="label-bold">
           <%= t(".linked_accounts") %>
       </label>
   
       <div id="services" class="box">
       <% @socials.each do |social| %>  
         <div class="social-row">  
             <a href="<%= social.weblink %>" class="social-item2">
                <%= image_tag "#{social.provider}_64.png", :size => "32x32", :alt => "#{social.provider}" %>
                <%= social.provider.capitalize %> 
             </a>
             <label ><%= social.username %> <%= social.email if social.email %></label>
             <% @socials.count == 1 ? @msg = t(".remove_message2") : @msg = '' %>
             <%= link_to t(".remove_this_account"), social, data: { confirm: t(".remove_message1") + ' ' + @msg }, method: :delete %>
         </div>  
       <% end %>
       </div>
  </div>
<% end %>

<% if @socials.count < 5 %>
    <div id="linknew" class="container social-box">
       <label class="label-bold">
         <%= t(".link_social_account") %>
       </label>
       <div id="services" class="box">
         <% if @socials.find {|social| social.provider.include?("facebook")} %>
         <% else %>
           <a href="/auth/facebook" class="social-item"><%= image_tag "facebook_64.png", :size => "64x64", :style => "padding: 5px", :alt => "Facebook" %>Facebook</a>
         <% end %>
         <% if @socials.find {|social| social.provider.include?("google")} %>
         <% else %>
           <a href="/auth/google" class="social-item"><%= image_tag "google_64.png", :size => "64x64", :style => "padding: 5px", :alt => "Google" %>Google</a>
         <% end %>
         <% if @socials.find {|social| social.provider.include?("twitter")} %>
         <% else %>
           <a href="/auth/twitter" class="social-item"><%= image_tag "twitter_64.png", :size => "64x64", :style => "padding: 5px", :alt => "Twitter" %>Twitter</a>
         <% end %>
         <% if @socials.find {|social| social.provider.include?("vkontakte")} %>
         <% else %>
           <a href="/auth/vkontakte" class="social-item"><%= image_tag "vkontakte_64.png", :size => "64x64", :style => "padding: 5px", :alt => "Vkontakte" %>Vkontakte</a>
         <% end %>
         <% if @socials.find {|social| social.provider.include?("github")} %>
         <% else %>
           <a href="/auth/github" class="social-item"><%= image_tag "github_64.png", :size => "64x64", :style => "padding: 5px", :alt => "Github" %>Github</a>
         <% end %>
       </div>
    </div>
<% end %>
<p><%= t(".unhappy") %> <%= link_to t(".cancel_my_account"), registration_path(resource_name), data: { confirm: t(".are_you_sure") }, method: :delete %></p>

<% content_for :js do %>
<script>
const input = document.querySelector('input[type=file]')

input.addEventListener('change', (event) => {
  Array.from(input.files).forEach(file => uploadFile(file))
  // clear uploaded files from the input
  input.value = null
})

const uploadFile = (file) => {
  // your form needs the file_field direct_upload: true, which
  //  provides data-direct-upload-url
  const url = input.dataset.directUploadUrl;
  ImmediateUploader.default.upload (file, url)
    .then(blob => {
      // get blob.signed_id and add it to form values to submit form
//      const hiddenField = document.createElement('input')
//      hiddenField.setAttribute("type", "hidden");
//      hiddenField.setAttribute("value", blob.signed_id);
//      hiddenField.name = input.name
//      document.querySelector('form').appendChild(hiddenField)
      // Update new avatar in browser
      document.getElementById('avatar').src = '/rails/active_storage/blobs/' + blob.signed_id + '/' + blob.filename;
      // Update photo in Database
      axios.post('/users/photo', { 'photo': blob.signed_id }).then(response => {});
    });
}
</script>
<% end %>
